
// Grid
// ––––––––––––––––––––––––––––––––––––––––––––––––––

// .container is main centered wrapper with a max width of 112.0rem (1120px)
.fdRW__container
  margin: 0 auto
  max-width: 112.0rem
  padding: 0 2.0rem
  position: relative
  width: 100%

// Using flexbox for the grid, inspired by Philip Walton:
// http://philipwalton.github.io/solved-by-flexbox/demos/grids/
// By default each .column within a .row will evenly take up
// available width, and the height of each .column with take
// up the height of the tallest .column in the same .row
.fdRW__row
  display: flex
  flex-direction: column
  padding: 0
  width: 100%

  &.fdRW__row-no-padding
    padding: 0

    &> .fdRW__column
      padding: 0

  &.fdRW__row-wrap
    flex-wrap: wrap

  // Vertically Align Columns
  // .row-* vertically aligns every .col in the .row
  &.fdRW__row-top
    align-items: flex-start

  &.fdRW__row-bottom
    align-items: flex-end

  &.fdRW__row-center
    align-items: center

  &.fdRW__row-stretch
    align-items: stretch

  &.fdRW__row-baseline
    align-items: baseline

  .fdRW__column
    display: block
    // IE 11 required specifying the flex-basis otherwise it breaks mobile
    flex: 1 1 auto
    margin-left: 0
    max-width: 100%
    width: 100%

    // Column Offsets
    &.fdRW__column-offset-10
      margin-left: 10%

    &.fdRW__column-offset-20
      margin-left: 20%

    &.fdRW__column-offset-25
      margin-left: 25%

    &.fdRW__column-offset-33,
    &.fdRW__column-offset-34
      margin-left: 33.3333%

    &.fdRW__column-offset-40
      margin-left: 40%

    &.fdRW__column-offset-50
      margin-left: 50%

    &.fdRW__column-offset-60
      margin-left: 60%

    &.fdRW__column-offset-66,
    &.fdRW__column-offset-67
      margin-left: 66.6666%

    &.fdRW__column-offset-75
      margin-left: 75%

    &.fdRW__column-offset-80
      margin-left: 80%

    &.fdRW__column-offset-90
      margin-left: 90%

    // Explicit Column Percent Sizes
    // By default each grid column will evenly distribute
    // across the grid. However, you can specify individual
    // columns to take up a certain size of the available area
    &.fdRW__column-10
      flex: 0 0 10%
      max-width: 10%

    &.fdRW__column-20
      flex: 0 0 20%
      max-width: 20%

    &.fdRW__column-25
      flex: 0 0 25%
      max-width: 25%

    &.fdRW__column-33,
    &.fdRW__column-34
      flex: 0 0 33.3333%
      max-width: 33.3333%

    &.fdRW__column-40
      flex: 0 0 40%
      max-width: 40%

    &.fdRW__column-50
      flex: 0 0 50%
      max-width: 50%

    &.fdRW__column-60
      flex: 0 0 60%
      max-width: 60%

    &.fdRW__column-66,
    &.fdRW__column-67
      flex: 0 0 66.6666%
      max-width: 66.6666%

    &.fdRW__column-75
      flex: 0 0 75%
      max-width: 75%

    &.fdRW__column-80
      flex: 0 0 80%
      max-width: 80%

    &.fdRW__column-90
      flex: 0 0 90%
      max-width: 90%

    // .column-* vertically aligns an individual .column
    .fdRW__column-top
      align-self: flex-start

    .fdRW__column-bottom
      align-self: flex-end

    .fdRW__column-center
      align-self: center

// Larger than mobile screen
@media (min-width: 40.0rem) // Safari desktop has a bug using `rem`, but Safari mobile works

  .fdRW__row
    flex-direction: row
    margin-left: -1.0rem
    width: calc(100% + 2.0rem)

    .fdRW__column
      margin-bottom: inherit
      padding: 0 1.0rem
